name: Model CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger on push to the main branch
  schedule:
    - cron: '0 0 * * *'  # Trigger daily for retraining (optional)

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  # Step 2: Train and Evaluate the Model
  train_and_eval:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Train model
        run: |
          # Run your training script to train the model
          python src/model/train_eval.py

      - name: Evaluate model performance
        run: |
          # Evaluate the trained model
          python src/model/test.py

      - name: Upload model artifacts
        uses: actions/upload-artifact@v2
        with:
          name: trained-model
          path: mlartifacts

  # Step 3: Register the Model in MLflow
  register_model:
    runs-on: ubuntu-latest
    needs: train_and_eval
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Register model in MLflow
        run: |
          python src/model/register.py --source "production" --model_dir "models/production" --alias "Production"

  # Step 4: Deploy the Model to Web Service (Deploy on Remote Server)
  deploy_to_server:
    runs-on: ubuntu-latest
    needs: register_model
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy model and web service to server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_SERVER_USER }}@${{ secrets.REMOTE_SERVER_HOST }} -p ${{ secrets.REMOTE_SERVER_PORT }} << 'EOF'
          # Navigate to the backend directory and pull the latest model
          cd /home/mlops/recovered/VietNewsSummerize_/
          git pull origin main

          # Optionally, pull the latest model artifacts from MLflow or file storage
          # Ensure the model is accessible by the backend
          docker-compose -f docker-compose.prod.yml up -d
          EOF
